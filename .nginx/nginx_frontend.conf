user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}
http {
    server {    
        server_name agilityportal.co;

        location / {      
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;      
            proxy_set_header Host $host;
            proxy_pass http://nodes;
      
            # enable WebSockets      
            proxy_http_version 1.1;      
            proxy_set_header Upgrade $http_upgrade;      
            proxy_set_header Connection "upgrade";    
            }  
        
    listen 5000 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/agilityportal.co/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/agilityportal.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
  upstream nodes {    
      # enable sticky session with either "hash" (uses the complete IP address)    
      hash $remote_addr consistent;    
      # or "ip_hash" (uses the first three octets of the client IPv4 address, or the entire IPv6 address)    
      # ip_hash;    
      # or "sticky" (needs commercial subscription)    
      # sticky cookie srv_id expires=1h domain=.example.com path=/;

        server 172.31.24.110:5001;    
        }
    
    server {
    if ($host = agilityportal.co) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    
        listen 8083;    
        server_name agilityportal.co;
    return 404; # managed by Certbot


}}
